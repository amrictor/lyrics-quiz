{"version":3,"sources":["components/Display.js","components/Sidebar.js","components/FileUpload.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Display","props","state","forfeit","checkWord","bind","lyricDiscovered","lyric","word","toLowerCase","replace","trim","this","discoveredWords","map","w","wordsEquivalent","includes","event","target","value","song","lyrics","forEach","index","discover","JSON","stringify","id","gameWon","Input","type","disabled","forfeit_status","onChange","filter","length","onClick","className","title","key","Component","Sidebar","expanded","toggle","setState","children","FileUpload","readText","raw","line","split","push","raw_arr","processLyrics","slice","reader","FileReader","onload","fileContent","result","readFile","setSong","readAsText","files","text","obj","parse","track","name","artist","callback","request","XMLHttpRequest","open","onreadystatechange","readyState","status","getResponseHeader","indexOf","responseText","send","album","getText","tracks","Math","floor","random","renderSearch","Game","temp","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92942c7d.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport { Input } from 'reactstrap'\r\n\r\nimport \"../styles/Display.scss\"\r\n\r\nclass Display extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            forfeit: false\r\n        }\r\n        this.checkWord = this.checkWord.bind(this)\r\n        this.lyricDiscovered = this.lyricDiscovered.bind(this)\r\n    }\r\n\r\n    wordsEquivalent(lyric, word) {\r\n        return lyric.toLowerCase().replace(\"'\", \"\").trim() === word.toLowerCase().replace(\"'\", \"\").trim()\r\n    }\r\n\r\n    lyricDiscovered(word) {\r\n        return (this.props.discoveredWords.map((w) => this.wordsEquivalent(w, word)).includes(true))\r\n    }\r\n\r\n    checkWord(event) {\r\n        let word = event.target.value\r\n        if (this.lyricDiscovered(word)) return;\r\n        this.props.song.lyrics.forEach((w, index) => {\r\n            if(this.wordsEquivalent(w, word)) {\r\n                this.props.discover(w, index);\r\n                event.target.value = \"\"\r\n            }\r\n        })\r\n    }\r\n\r\n    gameWon(){\r\n        return JSON.stringify(this.props.discoveredWords) === JSON.stringify(this.props.song.lyrics)\r\n    }\r\n    \r\n    render(){\r\n        return ( \r\n            <div id=\"outer_display\">\r\n                \r\n                {typeof this.props.song != \"undefined\"\r\n                ? <div id=\"display\">\r\n                    {this.gameWon() && <div id=\"winner\">You won!</div>}\r\n                    <Input type=\"search\" disabled={this.props.forfeit_status || this.gameWon()} onChange={this.checkWord}/> \r\n                    <div id=\"info\">\r\n                        {this.props.discoveredWords.filter((word) => word).length} / {this.props.song.lyrics.length}\r\n                        <button disabled={this.props.forfeit_status || this.gameWon()} onClick={this.props.forfeit}>Forfeit</button>\r\n                    </div>\r\n                    {(this.props.forfeit_status || this.gameWon()) && <div id=\"song_title\" className={this.props.forfeit_status ? \"forfeit\" : \"won\"}>{this.props.song.title}</div>}\r\n                    <div id=\"lyrics\">\r\n                        {this.props.song.lyrics.map((word, index) => <div key={index} className={\"word \" + (this.lyricDiscovered(word) ? \"\" : this.props.forfeit_status ? \"forfeit\" : \"undiscovered\")}>{word}</div>)}\r\n                    </div>\r\n                </div>\r\n                : <div>\r\n                    <div id=\"home\">Guess the lyrics...without knowing the song.</div>\r\n                    <div>Start by expanding the sidebar and choosing an album to play.</div>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    \r\n    }\r\n} export default Display;","import React, { Component } from 'react'\r\nimport { FaBars as MenuIcon } from 'react-icons/fa'\r\nimport \"../styles/Sidebar.scss\"\r\n\r\nclass Sidebar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ expanded: !this.state.expanded })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"sidebar\" className={this.state.expanded ? \" expanded\" : \"\"}>\r\n                <div id=\"header\">\r\n                    {this.state.expanded ? <div id=\"title\"> \"Title Goes Here\"</div> : \"\" }                   \r\n                    <MenuIcon id=\"icon\"  onClick={this.toggle}/>\r\n                </div>\r\n                {this.state.expanded ? this.props.children : \"\"}\r\n            </div>\r\n        );\r\n    \r\n    }\r\n} export default Sidebar;","import React, {Component} from 'react'\r\nimport '../styles/FileUpload.scss'\r\n\r\nclass FileUpload extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.readText = this.readText.bind(this)\r\n    }\r\n\r\n    processLyrics(raw) {\r\n        let lyrics = []\r\n        raw.forEach( line => {\r\n            line.split(/[, ?!:;().\"-]/).forEach ( word => {\r\n                if(word.length!==0) {\r\n                   lyrics.push(word)\r\n                }\r\n            });\r\n        });\r\n        return lyrics\r\n    }\r\n\r\n    readFile(raw) {\r\n        let raw_arr = raw.split(\"\\n\")\r\n        let song = {}\r\n        song[\"title\"] = raw_arr[0]\r\n        song[\"artist\"] = raw_arr[1]\r\n        song[\"album\"] = raw_arr[2]\r\n        song[\"lyrics\"] = this.processLyrics(raw_arr.slice(3))\r\n\r\n        return song;\r\n    }\r\n    \r\n    getFile(event) {\r\n        let reader = new FileReader();\r\n        reader.onload = function(event) {\r\n            let fileContent = event.target.result;\r\n            // let contents = JSON.parse(fileContent);\r\n            let song = this.readFile(fileContent)\r\n            this.props.setSong(song)\r\n        }.bind(this);\r\n        reader.readAsText(event.target.files[0]);\r\n    }\r\n\r\n    readText(text) {\r\n        let obj = JSON.parse(text)\r\n        let lyrics = obj.result.track.text.trim().replace(/’/g, '\\'')\r\n        let song = {}\r\n        song[\"title\"] = obj.result.track.name\r\n        song[\"artist\"] = obj.result.artist\r\n        song[\"lyrics\"] = lyrics.split((/[\\r\\n, ?!:;().\"-]+/)).filter((word) => word !== \"\" && word)\r\n        this.props.setSong(song)\r\n    }\r\n\r\n    getText(song, callback) {\r\n        var request = new XMLHttpRequest();\r\n        request.open('GET', 'https://orion.apiseeds.com/api/music/lyric/'+ song.artist + '/' + song.title +'?apikey=W5i0ZMfUmju2xbXNRZbsjpNYzGOMZiavxY4Vz6VlVatxFi8f9wdLAIofgwOP75TK', true);\r\n        request.onreadystatechange = () => {\r\n            if (request.readyState === 4 && request.status === 200) {\r\n                var type = request.getResponseHeader('Content-Type');\r\n                if (type.indexOf(\"text\") !== 1) {\r\n                    callback(request.responseText)\r\n                }\r\n            }\r\n        }\r\n        request.send();\r\n    }\r\n\r\n    renderSearch(){\r\n        const music = [\r\n            {\r\n            \"album\" : \"Hamilton\",\r\n            \"tracks\" : [\r\n                            {\r\n                                \"title\": \"Alexander Hamilton\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Aaron Burr, Sir\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"My Shot\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"The Story of Tonight\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"The Schuyler Sisters\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Farmer Refuted\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"You'll Be Back\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Right Hand Man\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"A Winter's Ball\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Helpless\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Satisfied\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"The Story of Tonight - Reprise\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Wait for It\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Stay Alive\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Ten Duel Commandments\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Meet Me Inside\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"That Would Be Enough\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Guns And Ships\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"History Has Its Eyes On You\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Yorktown (The World Turned Upside Down)\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"What Comes Next?\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Dear Theodosia\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Non-Stop\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"What'd I Miss\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Cabinet Battle #1\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Take a Break\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Say No To This\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"The Room Where It Happens\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Schuyler Defeated\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Cabinet Battle #2\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Washington on Your Side\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"One Last Time\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"I Know Him\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"The Adams Administration\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"We Know\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Hurricane\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"The Reynolds Pamphlet\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Burn\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Blow Us All Away\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Stay Alive - Reprise\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"It's Quiet Uptown\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"The Election of 1800\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Your Obedient Servant\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Best of Wives and Best of Women\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"The World Was Wide Enough\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            },\r\n                            {\r\n                                \"title\": \"Who Lives, Who Dies, Who Tells Your Story\",\r\n                                \"artist\": \"Lin-Manuel Miranda\"\r\n                            }\r\n                        ]\r\n        }]\r\n\r\n        return(\r\n            music.map((album)=><button key={album.album} onClick={() => this.getText(album.tracks[Math.floor(Math.random() * album.tracks.length)], this.readText)}>{album.album}</button>)\r\n        )\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            \r\n\r\n            <div id=\"upload\">\r\n                {/* \r\n                <div id=\"search\">\r\n                    <input></input>\r\n                </div> */}\r\n                {this.renderSearch()}\r\n                {/* <button onClick={()=>this.getText(this.readText)}>Get Text</button> */}\r\n                {/* <p>Upload a song file:</p>\r\n                <form>\r\n                    <input type=\"file\" name=\"myFile\" id=\"example\" onChange={(event) => {this.getFile(event)}}/>\r\n                </form> */}\r\n            </div>\r\n            \r\n        );\r\n    \r\n    }\r\n} export default FileUpload;","import React, {Component} from 'react'\r\nimport Display from './Display'\r\nimport \"../styles/Game.scss\"\r\nimport Sidebar from './Sidebar'\r\nimport FileUpload from './FileUpload'\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            discoveredWords : [],\r\n            forfeit: false\r\n        }\r\n        this.setSong = this.setSong.bind(this);\r\n        this.discover = this.discover.bind(this)\r\n        this.forfeit = this.forfeit.bind(this)\r\n    }\r\n    forfeit() {\r\n        this.setState({forfeit: true})\r\n    }\r\n\r\n    setSong(song) {\r\n        this.setState({song: song, discoveredWords: [], forfeit: false})\r\n    }\r\n    \r\n    discover(word, index) {\r\n        let temp = this.state.discoveredWords\r\n        temp[index]=word;\r\n        this.setState({discoveredWords : temp})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"game\">\r\n                <Sidebar>\r\n                    <div id=\"menu\">\r\n                        <FileUpload setSong={this.setSong}/>\r\n                    </div>\r\n                </Sidebar>\r\n                   \r\n                <Display forfeit_status={this.state.forfeit} forfeit={this.forfeit} setSong={this.setSong} song={this.state.song} discoveredWords={this.state.discoveredWords} discover={this.discover}/> \r\n            </div>\r\n        );\r\n    \r\n    }\r\n} export default Game;","import React from 'react';\nimport Game from './components/Game'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}