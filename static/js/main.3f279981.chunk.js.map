{"version":3,"sources":["components/Timer.js","components/Song.js","components/Sidebar.js","components/Search.js","components/Playlist.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Timer","props","state","time","passTime","bind","this","interval","setInterval","clearInterval","forfeit_status","gameWon","setState","number","slice","id","className","padNumber","Math","floor","Component","Song","discoveredWords","getLyrics","setSong","discover","forfeit","checkWord","lyricDiscovered","getSong","prevProps","match","params","genius_id","song","undefined","request","XMLHttpRequest","open","onreadystatechange","readyState","status","getResponseHeader","indexOf","JSON","parse","responseText","response","send","console","log","url","$","cheerio","load","s","title","album","name","primary_artist","text","replace","trim","split","filter","word","index","temp","lyric","toLowerCase","map","w","wordsEquivalent","includes","event","target","value","lyrics","forEach","stringify","Input","type","disabled","onChange","length","onClick","key","rel","href","Sidebar","expanded","toggle","children","Search","search","results","updateInput","getSearchResults","listenForEnter","obj","hits","hit","result","artist","lyrics_path","path","song_path","api_path","image","song_art_image_url","endpoint","callback","getGenius","encodeURI","keyCode","placeholder","onKeyDown","src","alt","songInPlaylist","addSong","Playlist","playlist","random","window","location","getRandomSong","removeSong","Game","checkCookie","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","cname","ca","i","c","charAt","substring","playlist_str","getCookie","push","setCookie","splice","exact","render","withRouter","App","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f279981.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"../styles/Timer.scss\"\r\n\r\n\r\nclass Timer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            time: 0, \r\n        }\r\n        this.passTime = this.passTime.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(this.passTime, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    passTime() {\r\n        if(this.props.forfeit_status || this.props.gameWon()) return\r\n        this.setState({ time: this.state.time+1 })\r\n    }\r\n\r\n    padNumber(number) {\r\n        if(number<100 ) return (\"0\"+number).slice(-2)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"timer\" className={this.props.forfeit_status ? \"forfeit\" : this.props.gameWon() ? \"won\" : \"\"}>\r\n                 {this.padNumber(Math.floor(this.state.time / (60*60)) % 24)}:{this.padNumber(Math.floor(this.state.time / 60) % 60)}:{this.padNumber(this.state.time % 60)}\r\n            </div>\r\n        );\r\n    \r\n    }\r\n} export default Timer;","import React, {Component} from 'react'\r\nimport { Input } from 'reactstrap'\r\nimport cheerio from 'cheerio';\r\nimport Timer from './Timer'\r\nimport \"../styles/Display.scss\"\r\n\r\nclass Song extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            discoveredWords : [],\r\n            forfeit_status: false,\r\n        }\r\n        this.getLyrics = this.getLyrics.bind(this);\r\n        this.setSong = this.setSong.bind(this);\r\n        this.discover = this.discover.bind(this)\r\n        this.forfeit = this.forfeit.bind(this)\r\n        this.checkWord = this.checkWord.bind(this)\r\n        this.gameWon = this.gameWon.bind(this)\r\n        this.lyricDiscovered = this.lyricDiscovered.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSong();\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.match.params.genius_id !== prevProps.match.params.genius_id) {\r\n            this.setState({song: undefined, forfeit_status: false, discoveredWords: []});\r\n            this.getSong();\r\n        }\r\n    }\r\n\r\n    getSong() {\r\n        const getLyrics = this.getLyrics;\r\n        var request = new XMLHttpRequest();\r\n        const token = \"4qtBMiQeR5pD1zFm-vGmFV6j5khGAiRQskTCLXyuGbxeYGbnXrTnXIyA5n2iXjdg\"\r\n        request.open('GET', 'https://api.genius.com/songs/' + this.props.match.params.genius_id + '?access_token=' + token, true);\r\n        request.onreadystatechange = () => {\r\n            if (request.readyState === 4 && request.status === 200) {\r\n                var type = request.getResponseHeader('Content-Type');\r\n                if (type.indexOf(\"text\") !== 1) {\r\n                    getLyrics(JSON.parse(request.responseText).response.song)\r\n                }\r\n            }\r\n        }\r\n        request.send();\r\n    }\r\n\r\n    getLyrics(song) {\r\n        console.log(song)\r\n        const setSong = this.setSong;\r\n        var request = new XMLHttpRequest();\r\n        request.open('GET', 'https://cors-anywhere.herokuapp.com/'+ song.url, true);\r\n        request.onreadystatechange = () => {\r\n            if (request.readyState === 4 && request.status === 200) {\r\n                var type = request.getResponseHeader('Content-Type');\r\n                if (type.indexOf(\"text\") !== 1) {\r\n                    const $ = cheerio.load(request.responseText)\r\n                    let s = {}\r\n                    s[\"title\"] = song.title ? song.title : \"N/A\"\r\n                    s[\"album\"] = song.album ? song.album.name : \"N/A\"\r\n                    s[\"artist\"] = song.primary_artist ? song.primary_artist.name : \"N/A\"\r\n                    s[\"url\"] = song.url\r\n                    s[\"lyrics\"]= $('.lyrics').text().replace(/\\[.*\\]/g, \"\").trim().replace(/[’‘]/g, '\\'').split((/[\\r\\n, ?!:;().…\"—-]+/)).filter((word) => word !== \"\" && word)\r\n                    setSong(s)\r\n                }\r\n            }\r\n        }\r\n        request.send();\r\n    }\r\n\r\n    forfeit() {\r\n        this.setState({forfeit_status: true})\r\n    }\r\n    \r\n    setSong(song) {\r\n        this.setState({song: song, discoveredWords: [], forfeit: false})\r\n    }\r\n\r\n    discover(word, index) {\r\n        let temp = this.state.discoveredWords\r\n        temp[index]=word;\r\n        this.setState({discoveredWords : temp})\r\n    }\r\n\r\n    wordsEquivalent(lyric, word) {\r\n        return lyric.toLowerCase().replace(/'/g, \"\").trim() === word.toLowerCase().replace(/'/g, \"\").trim()\r\n    }\r\n\r\n    lyricDiscovered(word) {\r\n        return (this.state.discoveredWords.map((w) => this.wordsEquivalent(w, word)).includes(true))\r\n    }\r\n\r\n    checkWord(event) {\r\n        let word = event.target.value\r\n        if (this.lyricDiscovered(word)) return;\r\n        this.state.song.lyrics.forEach((w, index) => {\r\n            if(this.wordsEquivalent(w, word)) {\r\n                this.discover(w, index);\r\n                event.target.value = \"\"\r\n            }\r\n        })\r\n    }\r\n\r\n    gameWon(){\r\n        if (typeof this.state.song === \"undefined\") return false;\r\n        return JSON.stringify(this.state.discoveredWords) === JSON.stringify(this.state.song.lyrics)\r\n    }\r\n    \r\n    render(){\r\n        return ( \r\n            <div id=\"outer_display\">\r\n                \r\n                {typeof this.state.song != \"undefined\"\r\n                ? <div id=\"display\">\r\n                    {this.gameWon() && <div id=\"winner\">You won!</div>}\r\n                    <Input type=\"search\" disabled={this.state.forfeit_status || this.gameWon()} onChange={this.checkWord}/> \r\n                    <div id=\"info\">\r\n                        <div>{this.state.discoveredWords.filter((word) => word).length} / {this.state.song.lyrics.length}</div>\r\n                        <Timer forfeit_status={this.state.forfeit_status} gameWon={this.gameWon}/>\r\n                        <button disabled={this.state.forfeit_status || this.gameWon()} onClick={this.forfeit}>Forfeit</button>\r\n                    </div>\r\n                    {(this.state.forfeit_status || this.gameWon()) && <div id=\"song_title\" className={this.state.forfeit_status ? \"forfeit\" : \"won\"}>{this.state.song.title}</div>}\r\n                    <div id=\"lyrics\">\r\n                        {this.state.song.lyrics.map((word, index) => <div key={index} className={\"word \" + (this.lyricDiscovered(word) ? \"\" : this.state.forfeit_status ? \"forfeit\" : \"undiscovered\")}>{word}</div>)}\r\n                    </div>\r\n                    {(this.state.forfeit_status || this.gameWon()) && <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.state.song.url}>Notice something wrong with these lyrics? <br/>Help fix them by following this link and suggesting a change!</a>}\r\n                    \r\n                </div>\r\n                : \"Loading...\"\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n} export default Song;","import React, { Component } from 'react'\r\nimport { FaBars as MenuIcon } from 'react-icons/fa'\r\nimport \"../styles/Sidebar.scss\"\r\n\r\nclass Sidebar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ expanded: !this.state.expanded })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"sidebar\" className={this.state.expanded ? \" expanded\" : \"\"}>\r\n                <div id=\"header\">\r\n                    <div id=\"title\" className={this.state.expanded ? \" expanded\" : \"hidden\"}></div>                   \r\n                    <MenuIcon id=\"icon\"  onClick={this.toggle}/>\r\n                </div>\r\n                <div id=\"children\" className={this.state.expanded ? \" expanded\" : \"hidden\"}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n    }\r\n} export default Sidebar;","import React, {Component} from 'react'\r\nimport { Input } from 'reactstrap'\r\n\r\nimport { FaPlusSquare as Add, FaCheckSquare as Check } from 'react-icons/fa'\r\n\r\nimport '../styles/Search.scss'\r\n\r\n\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            search: \"\",\r\n            results: []\r\n        }\r\n        this.updateInput = this.updateInput.bind(this)\r\n        this.getSearchResults = this.getSearchResults.bind(this)\r\n        this.search = this.search.bind(this)\r\n        this.listenForEnter = this.listenForEnter.bind(this)\r\n    }\r\n\r\n    getSearchResults(obj) {\r\n        console.log(obj)\r\n        let results = obj.response.hits.map((hit) => {return {title: hit.result.title, artist: {name: hit.result.primary_artist.name, id: hit.result.primary_artist.id}, lyrics_path: hit.result.path, song_path: hit.result.api_path, image: hit.result.song_art_image_url}})\r\n        console.log(results)\r\n        this.setState({results: results})\r\n    }\r\n\r\n    getGenius(endpoint, callback) {\r\n        var request = new XMLHttpRequest();\r\n        request.open('GET', 'https://api.genius.com' + endpoint + '&access_token=4qtBMiQeR5pD1zFm-vGmFV6j5khGAiRQskTCLXyuGbxeYGbnXrTnXIyA5n2iXjdg', true);\r\n        request.onreadystatechange = () => {\r\n            if (request.readyState === 4 && request.status === 200) {\r\n                var type = request.getResponseHeader('Content-Type');\r\n                if (type.indexOf(\"text\") !== 1) {\r\n                    console.log(JSON.parse(request.responseText))\r\n                    callback(JSON.parse(request.responseText))\r\n                }\r\n            }\r\n        }\r\n        request.send();\r\n    }\r\n\r\n    renderSearch(){\r\n        return(\r\n            this.state.results.map((result)=><div><a href={\"/#\" +result.song_path}><button>{result.title} by <i>{result.artist}</i></button></a></div>)\r\n        )\r\n\r\n    }\r\n    updateInput(event) {\r\n        this.setState({search: event.target.value})\r\n    }\r\n\r\n    search() {\r\n        this.getGenius('/search?per_page=15&q='+encodeURI(this.state.search), this.getSearchResults)\r\n    }\r\n\r\n    listenForEnter(event) {\r\n        if (event.keyCode === 13) {\r\n            this.search();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"search\">\r\n                \r\n                <div id=\"search_bar\">\r\n                    <Input placeholder=\"Search music...\" onChange={this.updateInput}  onKeyDown={this.listenForEnter}/>\r\n                    <button onClick={this.search}>Search</button>\r\n                </div>\r\n\r\n                {this.state.results.length > 0 && <div id=\"search_results\">\r\n                    {this.state.results.map((result)=>\r\n                        <div className=\"result\" key={result.song_path}>\r\n                            <div className=\"info\">\r\n                                <img src={result.image} alt=\"\"/>\r\n                                <div className=\"text\">\r\n                                    <a className=\"song\" title=\"Play this song\" href={\"/#\" +result.song_path}>{result.title}</a> \r\n                                    <a className=\"artist\" title=\"View more from this artist\" href={\"/#\" + result.artist.id}><i>{result.artist.name}</i></a>\r\n                                </div>\r\n                            </div>\r\n                            {this.props.songInPlaylist(result) \r\n                            ? <Check className=\"static\" title=\"Already in playlist\"/>\r\n                            : <Add  className=\"button\" title=\"Add to playlist\" onClick={()=>this.props.addSong(result)}/>}\r\n                        </div>\r\n                    )}\r\n                </div>}\r\n            </div>\r\n        );\r\n    \r\n    }\r\n} export default Search;","import React, {Component} from 'react'\r\n// import { Input } from 'reactstrap'\r\n\r\nimport { FaTimesCircle as Remove, FaRandom as Shuffle } from 'react-icons/fa'\r\n\r\nimport '../styles/Search.scss'\r\n\r\nclass Playlist extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            search: \"\",\r\n            results: []\r\n        }\r\n        this.updateInput = this.updateInput.bind(this)\r\n        this.getSearchResults = this.getSearchResults.bind(this)\r\n        this.search = this.search.bind(this)\r\n        this.listenForEnter = this.listenForEnter.bind(this)\r\n    }\r\n\r\n    getSearchResults(obj) {\r\n        console.log(obj)\r\n        let results = obj.response.hits.map((hit) => {return {title: hit.result.title, artist: {name: hit.result.primary_artist.name, id: hit.result.primary_artist.id}, lyrics_path: hit.result.path, song_path: hit.result.api_path, image: hit.result.song_art_image_url}})\r\n        console.log(results)\r\n        this.setState({results: results})\r\n    }\r\n\r\n    getGenius(endpoint, callback) {\r\n        var request = new XMLHttpRequest();\r\n        request.open('GET', 'https://api.genius.com' + endpoint + '&access_token=4qtBMiQeR5pD1zFm-vGmFV6j5khGAiRQskTCLXyuGbxeYGbnXrTnXIyA5n2iXjdg', true);\r\n        request.onreadystatechange = () => {\r\n            if (request.readyState === 4 && request.status === 200) {\r\n                var type = request.getResponseHeader('Content-Type');\r\n                if (type.indexOf(\"text\") !== 1) {\r\n                    console.log(JSON.parse(request.responseText))\r\n                    callback(JSON.parse(request.responseText))\r\n                }\r\n            }\r\n        }\r\n        request.send();\r\n    }\r\n\r\n    renderSearch(){\r\n        return(\r\n            this.state.results.map((result)=><div><a href={\"/#\" +result.song_path}><button>{result.title} by <i>{result.artist}</i></button></a></div>)\r\n        )\r\n\r\n    }\r\n    updateInput(event) {\r\n        this.setState({search: event.target.value})\r\n    }\r\n\r\n    search() {\r\n        this.getGenius('/search?per_page=15&q='+encodeURI(this.state.search), this.getSearchResults)\r\n    }\r\n\r\n    listenForEnter(event) {\r\n        if (event.keyCode === 13) {\r\n            this.search();\r\n        }\r\n    }\r\n\r\n    getRandomSong() {\r\n        return this.props.playlist.filter((song)=> JSON.stringify(song) !== JSON.stringify(this.state.song))[Math.floor(Math.random() * this.props.playlist.length)].song_path\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"playlist\">\r\n                <div id=\"heading\">\r\n                    My Playlist\r\n                    {this.props.playlist.length > 0 && <Shuffle className=\"button\" onClick={()=>{window.location.href = \"/#\" + this.getRandomSong()}}/>}\r\n                </div>\r\n                <div id=\"search_results\">\r\n                    {this.props.playlist.length > 0 ? this.props.playlist.map((result, index)=>\r\n                        <div className=\"result\" key={result.song_path}>\r\n                            <div className=\"info\">\r\n                                <img src={result.image} alt=\"\"/>\r\n                                <div className=\"text\">\r\n                                    <a className=\"song\" title=\"Play this song\" href={\"/#\" +result.song_path}>{result.title}</a> \r\n                                    <a className=\"artist\" title=\"View more from this artist\" href={\"/#\" + result.artist.id}><i>{result.artist.name}</i></a>\r\n                                </div>\r\n                            </div>\r\n                            <Remove title=\"Add to playlist\" className=\"button\" onClick={()=>{this.props.removeSong(index)}}/>\r\n                        </div>\r\n                    ) : <div id=\"alt\">Search for songs to add to your playlist!</div>}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    \r\n    }\r\n} export default Playlist;","import React, {Component} from 'react'\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\n\r\nimport Song from './Song'\r\nimport \"../styles/Game.scss\"\r\nimport Sidebar from './Sidebar'\r\nimport Search from './Search'\r\nimport Playlist from './Playlist'\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            playlist: []\r\n        }\r\n        this.addSong = this.addSong.bind(this)\r\n        this.removeSong = this.removeSong.bind(this)\r\n        this.songInPlaylist = this.songInPlaylist.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkCookie();\r\n    }\r\n\r\n    setCookie(name, value, exdays=0) {\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n        var expires = (exdays===0) ? \"\" : \"expires=\"+d.toUTCString() + \";path=/\";\r\n        document.cookie = name + \"=\" + JSON.stringify(value) + \";\" + expires;\r\n    }\r\n\r\n    getCookie(cname) {\r\n        let name = cname + \"=\";\r\n        let ca = document.cookie.split(';');\r\n        for(let i = 0; i < ca.length; i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    checkCookie() {\r\n        let playlist_str = this.getCookie(\"playlist\");\r\n        if (playlist_str !== \"\") {\r\n            let playlist = JSON.parse(playlist_str);\r\n            this.setState({playlist: playlist});\r\n        }\r\n    }\r\n\r\n    songInPlaylist(song) {\r\n        return this.state.playlist.slice().map((s)=>JSON.stringify(s)).includes(JSON.stringify(song))\r\n    }\r\n\r\n    addSong(song) {\r\n        if(this.songInPlaylist(song)) return;\r\n\r\n        var playlist = this.state.playlist;\r\n        playlist.push(song);\r\n        this.setState({playlist: playlist}, () => this.setCookie(\"playlist\", this.state.playlist))\r\n    }\r\n\r\n    removeSong(index) {\r\n        var playlist = this.state.playlist;\r\n        playlist.splice(index, 1);\r\n        this.setState({playlist: playlist}, () => this.setCookie(\"playlist\", this.state.playlist))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"game\">\r\n                <Sidebar>\r\n                    {/* <div id=\"menu\"> */}\r\n                        <Search addSong={this.addSong} songInPlaylist={this.songInPlaylist}/>\r\n                        <Playlist playlist={this.state.playlist} removeSong={this.removeSong}/>\r\n                    {/* </div> */}\r\n                </Sidebar>\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/\"\r\n                        render={(props) => \r\n                            <div id=\"home\">\r\n                                <div className=\"big\">How well do you know your favorite songs?</div>\r\n                                <div>Start by expanding the sidebar and searching for a song to play.</div>\r\n                                <div>Randomization coming soon.</div>\r\n                            </div>}\r\n                    />\r\n                    <Route\r\n                        path=\"/songs/:genius_id\"\r\n                        render={(props) => <Song {...props}/>}\r\n                    />\r\n                </Switch> \r\n            </div>\r\n        );\r\n    \r\n    }\r\n} export default withRouter(Game);","import React from 'react';\nimport Game from './components/Game'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}